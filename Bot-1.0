import org.telegram.telegrambots.api.methods.send.SendMessage;
import org.telegram.telegrambots.api.methods.updatingmessages.EditMessageText;
import org.telegram.telegrambots.api.objects.Update;
import org.telegram.telegrambots.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.exceptions.TelegramApiException;

import java.util.ArrayList;
import java.util.List;

import static java.lang.Math.toIntExact;

public class BotApi20 extends TelegramLongPollingBot {
    @Override
    public void onUpdateReceived(Update update) {

        if (update.hasMessage() && update.getMessage().hasText()) { // We check if the update has a message and the message has text
            
        	String message_text = update.getMessage().getText();//variaveis
        	String nome = update.getMessage().getFrom().getFirstName();
        	String usuario = update.getMessage().getFrom().getUserName();
        	System.out.println(nome+" "+usuario+" "+message_text);
            long chat_id = update.getMessage().getChatId();		//variaveis
            
            
            if (update.getMessage().getText().equals("Oi")|| update.getMessage().getText().equals("oi")) { //Se tiver escrito igual, ele manda o botão

                SendMessage message = new SendMessage() // Create a message object object
                        .setChatId(chat_id)//variavel da linha 21
                        .setText("Bom dia!\nGostaria de saber se vc irá amanhã na consulta ");
                
                InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
                List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();
                List<InlineKeyboardButton> rowInline = new ArrayList<>();
                
                rowInline.add(new InlineKeyboardButton().setText("Vou sim").setCallbackData("Sim"));
                rowInline.add(new InlineKeyboardButton().setText("Vai te catar, vou não").setCallbackData("Nao"));
                // Set the keyboard to the markup
                rowsInline.add(rowInline);
                // Add it to the message
                markupInline.setKeyboard(rowsInline);
                message.setReplyMarkup(markupInline);
                try {
                    execute(message); // Sending our message object to user
                } catch (TelegramApiException e) {
                    e.printStackTrace();
                }
                
            } else if (!update.getMessage().getText().equals("Oi")){
            	  
            	long chat_id1 = update.getMessage().getChatId();		//variaveis
            	
                SendMessage message = new SendMessage() // Create a message object object
                        .setChatId(chat_id1)//variavel da linha 21
                        .setText("Manda um \"Oi\" ai vai ");
                try {
                    execute(message);
                } catch (TelegramApiException e) {
                    e.printStackTrace();
                }
            }

        } else if (update.hasCallbackQuery()) {
            // Set variables
            String call_data = update.getCallbackQuery().getData();
            long message_id = update.getCallbackQuery().getMessage().getMessageId();
            long chat_id = update.getCallbackQuery().getMessage().getChatId();

            if (call_data.equals("Sim")) {
                String answer = "De boas então, te vejo amanhã";
                EditMessageText new_message = new EditMessageText()
                        .setChatId(chat_id)
                        .setMessageId(toIntExact(message_id))
                        .setText(answer);
                try {
                    execute(new_message);
                } catch (TelegramApiException e) {
                    e.printStackTrace();
                }
            }else if(call_data.equals("Nao")) {
            	String answer = "Puts, blz vou desmarcar então";
                EditMessageText new_message = new EditMessageText()
                        .setChatId(chat_id)
                        .setMessageId(toIntExact(message_id))
                        .setText(answer);
                try {
                    execute(new_message);
                } catch (TelegramApiException e) {
                    e.printStackTrace();
                }
            }
        }
    }
    @Override
    public String getBotUsername() {
        // Return bot username
        // If bot username is @MyAmazingBot, it must return 'MyAmazingBot'
        return "nome";
    }

    @Override
    public String getBotToken() {
        // Return bot token from BotFather
        return "key";
    }
}
